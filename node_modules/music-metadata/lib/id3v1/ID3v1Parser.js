'use strict';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var MpegParser_1 = require("../mpeg/MpegParser");
var token_types_1 = require("token-types");
var Token = require("token-types");
/**
 * ID3v1 Genre mappings
 * Ref: https://de.wikipedia.org/wiki/Liste_der_ID3v1-Genres
 */
exports.Genres = [
    'Blues', 'Classic Rock', 'Country', 'Dance', 'Disco', 'Funk', 'Grunge', 'Hip-Hop',
    'Jazz', 'Metal', 'New Age', 'Oldies', 'Other', 'Pop', 'R&B', 'Rap', 'Reggae', 'Rock',
    'Techno', 'Industrial', 'Alternative', 'Ska', 'Death Metal', 'Pranks', 'Soundtrack',
    'Euro-Techno', 'Ambient', 'Trip-Hop', 'Vocal', 'Jazz+Funk', 'Fusion', 'Trance',
    'Classical', 'Instrumental', 'Acid', 'House', 'Game', 'Sound Clip', 'Gospel', 'Noise',
    'Alt. Rock', 'Bass', 'Soul', 'Punk', 'Space', 'Meditative', 'Instrumental Pop',
    'Instrumental Rock', 'Ethnic', 'Gothic', 'Darkwave', 'Techno-Industrial',
    'Electronic', 'Pop-Folk', 'Eurodance', 'Dream', 'Southern Rock', 'Comedy', 'Cult',
    'Gangsta Rap', 'Top 40', 'Christian Rap', 'Pop/Funk', 'Jungle', 'Native American',
    'Cabaret', 'New Wave', 'Psychedelic', 'Rave', 'Showtunes', 'Trailer', 'Lo-Fi', 'Tribal',
    'Acid Punk', 'Acid Jazz', 'Polka', 'Retro', 'Musical', 'Rock & Roll', 'Hard Rock',
    'Folk', 'Folk/Rock', 'National Folk', 'Swing', 'Fast-Fusion', 'Bebob', 'Latin', 'Revival',
    'Celtic', 'Bluegrass', 'Avantgarde', 'Gothic Rock', 'Progressive Rock', 'Psychedelic Rock',
    'Symphonic Rock', 'Slow Rock', 'Big Band', 'Chorus', 'Easy Listening', 'Acoustic', 'Humour',
    'Speech', 'Chanson', 'Opera', 'Chamber Music', 'Sonata', 'Symphony', 'Booty Bass', 'Primus',
    'Porn Groove', 'Satire', 'Slow Jam', 'Club', 'Tango', 'Samba', 'Folklore',
    'Ballad', 'Power Ballad', 'Rhythmic Soul', 'Freestyle', 'Duet', 'Punk Rock', 'Drum Solo',
    'A Cappella', 'Euro-House', 'Dance Hall', 'Goa', 'Drum & Bass', 'Club-House',
    'Hardcore', 'Terror', 'Indie', 'BritPop', 'Negerpunk', 'Polsk Punk', 'Beat',
    'Christian Gangsta Rap', 'Heavy Metal', 'Black Metal', 'Crossover', 'Contemporary Christian',
    'Christian Rock', 'Merengue', 'Salsa', 'Thrash Metal', 'Anime', 'JPop', 'Synthpop',
    'Abstract', 'Art Rock', 'Baroque', 'Bhangra', 'Big Beat', 'Breakbeat', 'Chillout',
    'Downtempo', 'Dub', 'EBM', 'Eclectic', 'Electro', 'Electroclash', 'Emo', 'Experimental',
    'Garage', 'Global', 'IDM', 'Illbient', 'Industro-Goth', 'Jam Band', 'Krautrock',
    'Leftfield', 'Lounge', 'Math Rock', 'New Romantic', 'Nu-Breakz', 'Post-Punk', 'Post-Rock',
    'Psytrance', 'Shoegaze', 'Space Rock', 'Trop Rock', 'World Music', 'Neoclassical', 'Audiobook',
    'Audio Theatre', 'Neue Deutsche Welle', 'Podcast', 'Indie Rock', 'G-Funk', 'Dubstep',
    'Garage Rock', 'Psybient'
];
/**
 * Ref: https://en.wikipedia.org/wiki/ID3
 * @type {{len: number; get: ((buf, off)=>Iid3v1Header)}}
 */
var Iid3v1Token = {
    len: 128,
    get: function (buf, off) {
        return {
            header: new Id3v1StringType(3, 'ascii').get(buf, off),
            title: new Id3v1StringType(30, 'ascii').get(buf, off + 3),
            artist: new Id3v1StringType(30, 'ascii').get(buf, off + 33),
            album: new Id3v1StringType(30, 'ascii').get(buf, off + 63),
            year: new Id3v1StringType(4, 'ascii').get(buf, off + 93),
            comment: new Id3v1StringType(28, 'ascii').get(buf, off + 97),
            zeroByte: Token.INT8.get(buf, off + 127),
            track: Token.INT8.get(buf, off + 126),
            genre: Token.INT8.get(buf, off + 127)
        };
    }
};
var Id3v1StringType = (function (_super) {
    __extends(Id3v1StringType, _super);
    function Id3v1StringType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Id3v1StringType.prototype.get = function (buf, off) {
        var value = _super.prototype.get.call(this, buf, off);
        value = value.trim().replace(/\x00/g, '');
        return value.length > 0 ? value : undefined;
    };
    return Id3v1StringType;
}(token_types_1.StringType));
var ID3v1Parser = (function () {
    function ID3v1Parser() {
    }
    ID3v1Parser.getInstance = function () {
        return new ID3v1Parser();
    };
    ID3v1Parser.getGenre = function (genreIndex) {
        if (genreIndex < exports.Genres.length) {
            return exports.Genres[genreIndex];
        }
        return undefined; // ToDO: generate warning
    };
    ID3v1Parser.prototype.parse = function (tokenizer, options) {
        this.mpegParser = new MpegParser_1.MpegParser(tokenizer, 128, options && options.duration);
        return this.mpegParser.parse().then(function (format) {
            return tokenizer.readToken(Iid3v1Token, tokenizer.fileSize - Iid3v1Token.len).then(function (header) {
                var res = {
                    format: format,
                    native: {
                        'id3v1.1': [
                            { id: 'title', value: header.title },
                            { id: 'artist', value: header.artist },
                            { id: 'album', value: header.album },
                            { id: 'comment', value: header.comment },
                            { id: 'track', value: header.track },
                            { id: 'year', value: header.year },
                            { id: 'genre', value: ID3v1Parser.getGenre(header.genre) }
                        ]
                    }
                };
                res.format.headerType = 'id3v1.1';
                return res;
            });
        });
    };
    return ID3v1Parser;
}());
exports.ID3v1Parser = ID3v1Parser;
//# sourceMappingURL=ID3v1Parser.js.map