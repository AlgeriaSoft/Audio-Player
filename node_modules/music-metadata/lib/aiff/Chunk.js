"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Token = require("token-types");
var assert = require("assert");
/**
 * Common AIFF chunk header
 */
exports.Header = {
    len: 8,
    get: function (buf, off) {
        return {
            // Group-ID
            chunkID: new Token.StringType(4, 'ascii').get(buf, off),
            // Size
            size: buf.readUInt32BE(off + 4)
        };
    }
};
var Common = (function () {
    function Common(header) {
        assert.ok(header.size >= 18, "chunkSize should always be at least 18");
        this.len = header.size;
    }
    Common.prototype.get = function (buf, off) {
        return {
            numChannels: buf.readUInt16BE(off),
            numSampleFrames: buf.readUInt32BE(off + 2),
            sampleSize: buf.readUInt16BE(off + 6),
            // see: https://cycling74.com/forums/aiffs-80-bit-sample-rate-value
            sampleRate: buf.readUInt16BE(off + 8 + 2)
        };
    };
    return Common;
}());
exports.Common = Common;
//# sourceMappingURL=Chunk.js.map