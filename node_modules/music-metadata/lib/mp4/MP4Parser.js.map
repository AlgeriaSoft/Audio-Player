{"version":3,"file":"MP4Parser.js","sourceRoot":"","sources":["../../src/mp4/MP4Parser.ts"],"names":[],"mappings":"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","sourcesContent":["import {ITokenParser} from \"../ParserFactory\";\nimport {INativeAudioMetadata, ITag, IFormat, IOptions} from \"../\";\nimport {ITokenizer} from \"strtok3\";\nimport {Promise} from \"es6-promise\";\nimport {StringType, BufferType, IGetToken, IgnoreType} from \"token-types\";\nimport * as Token from \"token-types\";\nimport {Genres} from \"../id3v1/ID3v1Parser\";\n\n/**\n * M4A signature, ref: https://www.filesignatures.net/index.php?page=search&search=M4A&mode=EXT\n * ascii: ••• ftypM4A\n */\n// const signature_m4a = [0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41];\n\n/**\n * ascii: ••• ftypmp42\n */\n// const signature_m4a_42  = [0x00, 0x00, 0x00, 0x18, 0x66, 0x74, 0x79, 0x70, 0x6D, 0x34, 0x32];\n\ninterface IAtomHeader {\n  length: number,\n  name: string\n}\n\ninterface IAtomFtyp {\n  type: string\n}\n\n/**\n * Common interface for the mvhd (Movie Header) & mdhd (Media) atom\n */\ninterface IAtomMxhd {\n\n  /**\n   * A 1-byte specification of the version of this movie header atom.\n   */\n  version: number,\n\n  /**\n   * Three bytes of space for future movie header flags.\n   */\n  flags: number,\n\n  /**\n   * A 32-bit integer that specifies (in seconds since midnight, January 1, 1904) when the media atom was created.\n   * It is strongly recommended that this value should be specified using coordinated universal time (UTC).\n   */\n  creationTime: number,\n\n  /**\n   * A 32-bit integer that specifies (in seconds since midnight, January 1, 1904) when the media atom was changed.\n   * It is strongly recommended that this value should be specified using coordinated universal time (UTC).\n   */\n  modificationTime: number,\n\n  /**\n   * A time value that indicates the time scale for this media—that is, the number of time units that pass per second in its time coordinate system.\n   */\n  timeScale: number,\n\n  /**\n   * Duration: the duration of this media in units of its time scale.\n   */\n  duration: number,\n}\n\ninterface IAtomMdhd extends IAtomMxhd {\n  /**\n   * A 16-bit integer that specifies the language code for this media.\n   * See Language Code Values for valid language codes.\n   * Also see Extended Language Tag Atom for the preferred code to use here if an extended language tag is also included in the media atom.\n   * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/QTFFChap4/qtff4.html#//apple_ref/doc/uid/TP40000939-CH206-34353\n   */\n  language: number,\n\n  quality: number\n}\n\n/**\n * Interface for the parsed Movie Header Atom (mvhd)\n */\ninterface IAtomMvhd extends IAtomMxhd {\n\n  /**\n   * Preferred rate: a 32-bit fixed-point number that specifies the rate at which to play this movie.\n   * A value of 1.0 indicates normal rate.\n   */\n  preferredRate: number,\n\n  /**\n   * Preferred volume: A 16-bit fixed-point number that specifies how loud to play this movie’s sound.\n   * A value of 1.0 indicates full volume.\n   */\n  preferredVolume: number,\n\n  /**\n   * Reserved: Ten bytes reserved for use by Apple. Set to 0.\n   */\n  // reserved: number,\n\n  /**\n   *  Matrix structure: The matrix structure associated with this movie.\n   *  A matrix shows how to map points from one coordinate space into another.\n   *  See Matrices for a discussion of how display matrices are used in QuickTime.\n   */\n  // matrixStructure: ???;\n\n  /**\n   * Preview time: The time value in the movie at which the preview begins.\n   */\n  previewTime: number,\n\n  /**\n   * Preview duration: The duration of the movie preview in movie time scale units.\n   */\n  previewDuration: number;\n\n  /**\n   * Poster time: The time value of the time of the movie poster.\n   */\n  posterTime: number,\n\n  /**\n   * selection time: The time value for the start time of the current selection.\n   */\n  selectionTime: number,\n\n  /**\n   * Selection duration:  The duration of the current selection in movie time scale units.\n   */\n  selectionDuration: number,\n\n  /**\n   * Current time:  The time value for current time position within the movie.\n   */\n  currentTime: number\n\n  /**\n   * Next track ID:  A 32-bit integer that indicates a value to use for the track ID number of the next track added to this movie. Note that 0 is not a valid track ID value.\n   */\n  nextTrackID: number\n}\n\n/**\n * Interface for the metadata header atom: 'mhdr'\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW13\n */\ninterface IMovieHeaderAtom {\n\n  /**\n   * One byte that is set to 0.\n   */\n  version: number,\n\n  /**\n   * Three bytes that are set to 0.\n   */\n  flags: number,\n  /**\n   * A 32-bit unsigned integer indicating the value to use for the item ID of the next item created or assigned an item ID.\n   * If the value is all ones, it indicates that future additions will require a search for an unused item ID.\n   */\n  nextItemID: number\n}\n\n/**\n * Interface for the parsed Media Atom (mdhd)\n */\nclass Atom {\n\n  public static Header: IGetToken<IAtomHeader> = {\n    len: 8,\n\n    get: (buf: Buffer, off: number): IAtomHeader => {\n      return {\n        length: Token.UINT32_BE.get(buf, 0),\n        name: new StringType(4, \"binary\").get(buf, off + 4)\n      };\n    }\n  };\n\n  public static ftyp: IGetToken<IAtomFtyp> = {\n    len: 4,\n\n    get: (buf: Buffer, off: number): IAtomFtyp => {\n      return {\n        type: new StringType(4, \"ascii\").get(buf, off)\n      };\n    }\n  };\n\n  /**\n   * Token: Media Header Atom\n   */\n  public static mdhd: IGetToken<IAtomMdhd> = {\n    len: 24,\n\n    get: (buf: Buffer, off: number): IAtomMdhd => {\n      return {\n        version: Token.UINT8.get(buf, off + 0),\n        flags: Token.UINT24_BE.get(buf, off + 1),\n        creationTime: Token.UINT32_BE.get(buf, off + 4),\n        modificationTime: Token.UINT32_BE.get(buf, off + 8),\n        timeScale: Token.UINT32_BE.get(buf, off + 12),\n        duration: Token.UINT32_BE.get(buf, off + 16),\n        language: Token.UINT16_BE.get(buf, off + 20),\n        quality: Token.UINT16_BE.get(buf, off + 22)\n      };\n    }\n  };\n\n  /**\n   * Token: Movie Header Atom\n   */\n  public static mvhd: IGetToken<IAtomMvhd> = {\n    len: 100,\n\n    get: (buf: Buffer, off: number): IAtomMvhd => {\n      return {\n        version: Token.UINT8.get(buf, off + 0),\n        flags: Token.UINT24_BE.get(buf, off + 1),\n        creationTime: Token.UINT32_BE.get(buf, off + 4),\n        modificationTime: Token.UINT32_BE.get(buf, off + 8),\n        timeScale: Token.UINT32_BE.get(buf, off + 12),\n        duration: Token.UINT32_BE.get(buf, off + 16),\n        preferredRate: Token.UINT32_BE.get(buf, off + 20),\n        preferredVolume: Token.UINT16_BE.get(buf, off + 24),\n        // ignore reserver: 10 bytes\n        // ignore matrix structure: 36 bytes\n        previewTime: Token.UINT32_BE.get(buf, off + 72),\n        previewDuration: Token.UINT32_BE.get(buf, off + 76),\n        posterTime: Token.UINT32_BE.get(buf, off + 80),\n        selectionTime: Token.UINT32_BE.get(buf, off + 84),\n        selectionDuration: Token.UINT32_BE.get(buf, off + 88),\n        currentTime: Token.UINT32_BE.get(buf, off + 92),\n        nextTrackID: Token.UINT32_BE.get(buf, off + 96)\n      };\n    }\n  };\n\n  /**\n   * Token: Movie Header Atom\n   */\n  public static mhdr: IGetToken<IMovieHeaderAtom> = {\n    len: 8,\n\n    get: (buf: Buffer, off: number): IMovieHeaderAtom => {\n      return {\n        version: Token.UINT8.get(buf, off + 0),\n        flags: Token.UINT24_BE.get(buf, off + 1),\n        nextItemID: Token.UINT32_BE.get(buf, off + 4)\n      };\n    }\n  };\n\n}\n\n/**\n * Data Atom Structure ('data')\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW32\n */\ninterface IDataAtom {\n  /**\n   * Type Indicator\n   * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW28\n   */\n  type: {\n    /**\n     * The set of types from which the type is drawn\n     * If 0, type is drawn from the well-known set of types.\n     */\n    set: number, // ToDo: enum?\n    type: number\n  },\n  /**\n   * Locale Indicator\n   */\n  locale: number,\n  /**\n   * An array of bytes containing the value of the metadata.\n   */\n  value: Buffer;\n}\n\n/**\n * Data Atom Structure\n */\nclass DataAtom implements IGetToken<IDataAtom> {\n\n  public constructor(public len: number) {\n  }\n\n  public get(buf: Buffer, off: number): IDataAtom {\n    return {\n      type: {\n        set: Token.UINT8.get(buf, off + 0),\n        type: Token.UINT24_BE.get(buf, off + 1)\n      },\n      locale: Token.UINT24_BE.get(buf, off + 4),\n      value: new BufferType(this.len - 8).get(buf, off + 8)\n    };\n  }\n}\n\n/**\n * Data Atom Structure ('data')\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW32\n */\ninterface INameAtom {\n\n  /**\n   * One byte that is set to 0.\n   */\n  version: number,\n\n  /**\n   * Three bytes that are set to 0.\n   */\n  flags: number,\n\n  /**\n   * An array of bytes containing the value of the metadata.\n   */\n  name: string;\n}\n\n/**\n * Data Atom Structure\n * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW31\n */\nclass NameAtom implements IGetToken<INameAtom> {\n\n  public constructor(public len: number) {\n  }\n\n  public get(buf: Buffer, off: number): INameAtom {\n    return {\n      version: Token.UINT8.get(buf, off),\n      flags: Token.UINT24_BE.get(buf, off + 1),\n      name: new StringType(this.len - 4, \"utf-8\").get(buf, off + 4)\n    };\n  }\n}\n\n/*\n * Support for Apple iTunes MP4 tags as found in a M4A/MP4 file\n * Ref:\n *   http://developer.apple.com/mac/library/documentation/QuickTime/QTFF/Metadata/Metadata.html\n *   http://atomicparsley.sourceforge.net/mpeg-4files.html\n */\nexport class MP4Parser implements ITokenParser {\n\n  public static getInstance(): MP4Parser {\n    return new MP4Parser();\n  }\n\n  private static Types: { [index: number]: string } = {\n    0: 'uint8',\n    1: 'text',\n    13: 'jpeg',\n    14: 'png',\n    21: 'uint8'\n  };\n\n  private static read_BE_Signed_Integer(value: Buffer): number {\n    switch (value.length) {\n      case 1:\n        return value.readInt8(0);\n      case 2:\n        return value.readInt16BE(0);\n      case 3:\n        return Token.INT24_BE.get(value, 0);\n      case 4:\n        return value.readInt32BE(0);\n      default:\n        throw new Error(\"Illegal value length for BE-Signed-Integer (type 21): \" + value.length);\n    }\n  }\n\n  private static read_BE_Unsigned_Integer(value: Buffer): number {\n    switch (value.length) {\n      case 1:\n        return value.readUInt8(0);\n      case 2:\n        return value.readUInt16BE(0);\n      case 3:\n        return Token.UINT24_BE.get(value, 0);\n      case 4:\n        return value.readUInt32BE(0);\n      default:\n        throw new Error(\"Illegal value length for BE-Unsigned-Integer (type 22): \" + value.length);\n    }\n  }\n\n  private tokenizer: ITokenizer;\n  private options: IOptions;\n\n  private metaAtomsTotalLength = 0;\n\n  private format: IFormat = {\n    headerType: \"iTunes MP4\"\n  };\n  private tags: ITag[] = [];\n  private warnings: string[] = []; // ToDo: make this part of the parsing result\n\n  public parse(tokenizer: ITokenizer, options: IOptions): Promise<INativeAudioMetadata> {\n    this.tokenizer = tokenizer;\n    this.options = options;\n\n    return this.parseAtom().then(() => {\n      return {\n        format: this.format,\n        native: {\n          \"iTunes MP4\": this.tags\n        }\n      };\n    });\n  }\n\n  public parseAtom(): Promise<boolean> {\n\n    // Parse atom header\n    return this.tokenizer.readToken<IAtomHeader>(Atom.Header).then((header) => {\n      return this.parseAtomData(header).then((done) => {\n        if (done) {\n          // ToDo: messy ending\n          // console.log(\"Done with %s\", header.name);\n          return done;\n        } else {\n          return this.parseAtom();\n        }\n      });\n    });\n  }\n\n  private parseAtomData(header: IAtomHeader): Promise<boolean> {\n    const dataLen = header.length - 8;\n    // console.log(\"atom name=%s, len=%s\", header.name, header.length);\n    switch (header.name) {\n      case 'ftyp':\n        return this.parseAtom_ftyp(dataLen).then((types) => {\n          return false;\n        });\n\n      // \"Container\" atoms, contain nested atoms: 'moov', 'udta', 'meta', 'ilst', 'trak', 'mdia'\n      case 'moov': // The Movie Atom: contains other atoms\n      case 'udta': // User defined atom\n      case 'trak':\n      case 'mdia': // Media atom\n      case 'minf': // Media Information Atom\n      case 'stbl': // Media Information Atom\n        return this.parseAtom().then((done) => done);\n\n      case 'meta': // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n        return this.tokenizer.readToken<void>(new IgnoreType(4)).then(() => false); // meta has 4 bytes of padding, ignore\n\n      case 'ilst': // 'meta' => 'ilst': Metadata Item List Atom\n        // Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW24\n        return this.parseMetadataItem(dataLen).then(() => false);\n\n      case 'mdhd': // Media header atom\n        return this.parseAtom_mdhd(dataLen).then(() => false);\n\n      case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n        return this.parseAtom_mvhd(dataLen).then(() => false);\n\n      case '<id>': // 'meta' => 'ilst' => '<id>': metadata item atom\n        return this.parseMetadataItem(dataLen).then(() => false);\n\n      case 'cmov': // compressed movie atom; child of Movie Atom\n      case 'rmra': // reference movie atom; child of Movie Atom\n\n      case 'mdat':\n        return Promise.resolve<boolean>(true);\n\n      default:\n        // return this.ignoreAtomData(dataLen);\n        return this.tokenizer.readToken<Buffer>(new BufferType(dataLen)).then((buf) => {\n          // console.log(\"  ascii: %s\", header.name, header.length, buf.toString('ascii'));\n          buf = buf;\n        }).then(() => false);\n    }\n  }\n\n  private ignoreAtomData(len: number): Promise<void> {\n    return this.tokenizer.readToken<void>(new IgnoreType(len));\n  }\n\n  private parseAtom_ftyp(len: number): Promise<string[]> {\n    return this.tokenizer.readToken<IAtomFtyp>(Atom.ftyp).then((ftype) => {\n      len -= Atom.ftyp.len;\n      if (len > 0) {\n        return this.parseAtom_ftyp(len).then((types) => {\n          types.push(ftype.type);\n          return types;\n        });\n      } else {\n        return [];\n      }\n    });\n  }\n\n  /**\n   * Parse movie header (mvhd) atom\n   * @param len\n   */\n  private parseAtom_mvhd(len: number): Promise<void> {\n    return this.tokenizer.readToken<IAtomMvhd>(Atom.mvhd).then((mvhd) => {\n      this.parse_mxhd(mvhd);\n    });\n  }\n\n  /**\n   * Parse media header (mdhd) atom\n   * @param len\n   */\n  private parseAtom_mdhd(len: number): Promise<void> {\n    return this.tokenizer.readToken<IAtomMdhd>(Atom.mdhd).then((mdhd) => {\n      this.parse_mxhd(mdhd);\n    });\n  }\n\n  private parse_mxhd(mxhd: IAtomMxhd) {\n    this.format.sampleRate = mxhd.timeScale;\n    this.format.duration = mxhd.duration / mxhd.timeScale; // calculate duration in seconds\n  }\n\n  /**\n   * Parse media header (ilst) atom\n   * @param len\n   * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n   */\n  /*\n   private parseMetadataItem(len: number): Promise<void>{\n   // Parse atom header\n   return this.tokenizer.readToken<IAtomHeader>(Atom.Header).then((header) => {\n\n   return this.parseAtomData(header);\n   });\n   }*/\n\n  /**\n   * Parse Meta-item-list-atom (item of 'ilst' atom)\n   * @param len\n   * Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n   */\n  private parseMetadataItem(len: number): Promise<void> {\n    // Parse atom header\n    return this.tokenizer.readToken<IAtomHeader>(Atom.Header).then((header) => {\n      // console.log(\"metadata-item: name=%s, len=%s\", header.name, header.length);\n      return this.parseMetadataItemData(header.name, header.length - Atom.Header.len).then(() => {\n        const remaining = len - Atom.Header.len - header.length;\n        if (remaining > 0) {\n          return this.parseMetadataItem(remaining);\n        } else\n          return;\n      });\n    });\n  }\n\n  private parseMetadataItemData(tagKey: string, remLen: number): Promise<void> {\n    // Parse Meta Item List Atom\n    return this.tokenizer.readToken<IAtomHeader>(Atom.Header).then((header) => {\n      const dataLen = header.length - Atom.Header.len;\n      switch (header.name) {\n        case 'data': // value atom\n          return this.parseValueAtom(tagKey, header);\n        case 'itif': // item information atom (optional)\n          return this.tokenizer.readToken<Buffer>(new BufferType(dataLen)).then((dataAtom) => {\n            // console.log(\"  WARNING unsupported meta-item: %s[%s] => value=%s ascii=%s\", tagKey, header.name, dataAtom.toString(\"hex\"), dataAtom.toString(\"ascii\"));\n            return header.length;\n          });\n        case 'name': // name atom (optional)\n          return this.tokenizer.readToken<INameAtom>(new NameAtom(dataLen)).then((name) => {\n            tagKey += \":\" + name.name;\n            return header.length;\n          });\n        case 'mean': // name atom (optional)\n          return this.tokenizer.readToken<INameAtom>(new NameAtom(dataLen)).then((mean) => {\n            // console.log(\"  %s[%s] = %s\", tagKey, header.name, mean.name);\n            tagKey += \":\" + mean.name;\n            return header.length;\n          });\n        default:\n          return this.tokenizer.readToken<Buffer>(new BufferType(dataLen)).then((dataAtom) => {\n            // console.log(\"  WARNING unsupported meta-item: %s[%s] => value=%s ascii=%s\", tagKey, header.name, dataAtom.toString(\"hex\"), dataAtom.toString(\"ascii\"));\n            this.warnings.push(\"unsupported meta-item: \" + tagKey + \"[\" + header.name + \"] => value=\" + dataAtom.toString(\"hex\") + \" ascii=\" + dataAtom.toString(\"ascii\"));\n            return header.length;\n          });\n      }\n    }).then((len) => {\n      const remaining = remLen - len;\n      if (remaining === 0) {\n        return;\n      } else {\n        return this.parseMetadataItemData(tagKey, remaining);\n      }\n    });\n  }\n\n  private parseValueAtom(tagKey: string, header: IAtomHeader): Promise<number> {\n    return this.tokenizer.readToken(new DataAtom(header.length - Atom.Header.len)).then((dataAtom) => {\n\n      if (dataAtom.type.set === 0) {\n        // Use well-known-type table\n        // Ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW35\n        switch (dataAtom.type.type) { // ToDo?: use enum\n\n          case 0: // reserved: Reserved for use where no type needs to be indicated\n            switch (tagKey) {\n              case 'trkn':\n              case 'disk':\n                const num = Token.UINT8.get(dataAtom.value, 3);\n                const of = Token.UINT8.get(dataAtom.value, 5);\n                // console.log(\"  %s[data] = %s/%s\", tagKey, num, of);\n                this.tags.push({id: tagKey, value: num + \"/\" + of});\n                break;\n\n              case 'gnre':\n                const genreInt = Token.UINT8.get(dataAtom.value, 1);\n                const genreStr = Genres[genreInt - 1];\n                // console.log(\"  %s[data] = %s\", tagKey, genreStr);\n                this.tags.push({id: tagKey, value: genreStr});\n                break;\n\n              default:\n              // console.log(\"  reserved-data: name=%s, len=%s, set=%s, type=%s, locale=%s, value{ hex=%s, ascii=%s }\",\n              // header.name, header.length, dataAtom.type.set, dataAtom.type.type, dataAtom.locale, dataAtom.value.toString('hex'), dataAtom.value.toString('ascii'));\n            }\n            break;\n\n          case 1: // UTF-8: Without any count or NULL terminator\n            this.tags.push({id: tagKey, value: dataAtom.value.toString(\"utf-8\")});\n            break;\n\n          case 13: // JPEG\n            if (this.options.skipCovers)\n              break;\n            this.tags.push({\n              id: tagKey, value: {\n                format: 'image/jpeg',\n                data: new Buffer(dataAtom.value)\n              }\n            });\n            break;\n\n          case 14: // PNG\n            if (this.options.skipCovers)\n              break;\n            this.tags.push({\n              id: tagKey, value: {\n                format: 'image/png',\n                data: new Buffer(dataAtom.value)\n              }\n            });\n            break;\n\n          case 21: // BE Signed Integer\n            this.tags.push({id: tagKey, value: MP4Parser.read_BE_Signed_Integer(dataAtom.value)});\n            break;\n\n          case 22: // BE Unsigned Integer\n            this.tags.push({id: tagKey, value: MP4Parser.read_BE_Unsigned_Integer(dataAtom.value)});\n            break;\n\n          case 65: // An 8-bit signed integer\n            this.tags.push({id: tagKey, value: dataAtom.value.readInt8(0)});\n            break;\n\n          case 66: // A big-endian 16-bit signed integer\n            this.tags.push({id: tagKey, value: dataAtom.value.readInt16BE(0)});\n            break;\n\n          case 67: // A big-endian 32-bit signed integer\n            this.tags.push({id: tagKey, value: dataAtom.value.readInt32BE(0)});\n            break;\n\n          default:\n            throw new Error(\"Unsupported well-known-type: \" + dataAtom.type.type);\n        }\n      } else {\n        throw new Error(\"Unsupported type-set != 0: \" + dataAtom.type.set);\n      }\n\n      return header.length;\n    });\n  }\n\n}\n"]}