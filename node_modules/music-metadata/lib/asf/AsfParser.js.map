{"version":3,"file":"AsfParser.js","sourceRoot":"","sources":["../../src/asf/AsfParser.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport ReadableStream = NodeJS.ReadableStream;\nimport {INativeAudioMetadata, ITag, IFormat, IOptions} from \"../index\";\nimport {ITokenizer} from \"strtok3\";\nimport {ITokenParser} from \"../ParserFactory\";\nimport GUID from \"./GUID\";\nimport * as AsfObject from \"./AsfObject\";\n\n/**\n * Windows Media Metadata Usage Guidelines\n *   Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n *   https://tools.ietf.org/html/draft-fleischman-asf-01\n *   https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n *   http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n *   https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nexport class AsfParser implements ITokenParser {\n\n  public static headerType = 'asf';\n\n  public static getInstance(): AsfParser {\n    return new AsfParser();\n  }\n\n  /**\n   * Print GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n   * @param objectId Binary GUID\n   * @returns {string} GUID as dashed hexadecimal representation\n   */\n  private static guidToString(objectId: Buffer): string {\n    return objectId.slice(0, 4).toString('hex').toUpperCase() + \"-\"\n      + objectId.slice(4, 6).toString('hex').toUpperCase() + \"-\"\n      + objectId.slice(6, 8).toString('hex').toUpperCase() + \"-\"\n      + objectId.slice(8, 10).toString('hex').toUpperCase() + \"-\"\n      + objectId.slice(10, 16).toString('hex').toUpperCase();\n  }\n\n  private tokenizer: ITokenizer;\n\n  private numberOfObjectHeaders: number;\n\n  private tags: ITag[] = [];\n\n  private warnings: string[] = []; // ToDo: make these part of the parsing result\n\n  private format: IFormat = {\n    headerType: \"asf\"\n  };\n\n  public parse(tokenizer: ITokenizer, options: IOptions): Promise<INativeAudioMetadata> {\n\n    this.tokenizer = tokenizer;\n\n    return this.paresTopLevelHeaderObject();\n  }\n\n  private paresTopLevelHeaderObject(): Promise<INativeAudioMetadata> {\n    return this.tokenizer.readToken<AsfObject.IAsfTopLevelObjectHeader>(AsfObject.TopLevelHeaderObjectToken).then((header) => {\n      if (!header.objectId.equals(GUID.HeaderObject)) {\n        throw new Error('expected asf header; but was not found; got: ' + header.objectId.str);\n      }\n      this.numberOfObjectHeaders = header.numberOfHeaderObjects;\n      return this.parseObjectHeader();\n    });\n  }\n\n  private parseObjectHeader(): Promise<INativeAudioMetadata> {\n    // Parse common header of the ASF Object (3.1)\n    return this.tokenizer.readToken<AsfObject.IAsfObjectHeader>(AsfObject.HeaderObjectToken).then((header) => {\n      // Parse data part of the ASF Object\n      switch (header.objectId.str) {\n\n        case AsfObject.FilePropertiesObject.guid.str: // 3.2\n          return this.tokenizer.readToken<AsfObject.IFilePropertiesObject>(new AsfObject.FilePropertiesObject(header)).then((fpo) => {\n            this.format.duration = fpo.playDuration / 10000000;\n            this.format.bitrate = fpo.maximumBitrate;\n          });\n\n        case AsfObject.StreamPropertiesObject.guid.str: // 3.3\n          return this.tokenizer.readToken<AsfObject.IStreamPropertiesObject>(new AsfObject.StreamPropertiesObject(header)).then(() => {\n            return null; // ToDo\n          });\n\n        case AsfObject.HeaderExtensionObject.guid.str: // 3.4\n          return this.tokenizer.readToken<AsfObject.IHeaderExtensionObject>(new AsfObject.HeaderExtensionObject(header)).then(() => {\n            return this.parseObjectHeader();\n          });\n\n        case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\n          return this.tokenizer.readToken<ITag[]>(new AsfObject.ContentDescriptionObjectState(header)).then((tags) => {\n            this.tags = this.tags.concat(tags);\n          });\n\n        case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n          return this.tokenizer.readToken<ITag[]>(new AsfObject.ExtendedContentDescriptionObjectState(header)).then((tags) => {\n            this.tags = this.tags.concat(tags);\n          });\n\n        case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n          return this.tokenizer.readToken<AsfObject.IExtendedStreamPropertiesObject>(new AsfObject.ExtendedStreamPropertiesObjectState(header)).then((cd) => {\n            return null;\n          });\n\n        case AsfObject.MetadataObjectState.guid.str: // 4.7\n          return this.tokenizer.readToken<ITag[]>(new AsfObject.MetadataObjectState(header)).then((tags) => {\n            this.tags = this.tags.concat(tags);\n          });\n\n        case AsfObject.MetadataLibraryObjectState.guid.str: // 4.8\n          return this.tokenizer.readToken<ITag[]>(new AsfObject.MetadataLibraryObjectState(header)).then((tags) => {\n            this.tags = this.tags.concat(tags);\n          });\n\n        case GUID.PaddingObject.str:\n          // ToDo: register bytes pad\n          return this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n\n        default:\n          this.warnings.push(\"Ignore ASF-Object-GUID: \" + header.objectId.str);\n          // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n          return this.tokenizer.readToken<void>(new AsfObject.IgnoreObjectState(header));\n      }\n    }).then(() => {\n      if (--this.numberOfObjectHeaders > 0) {\n        return this.parseObjectHeader();\n      } else {\n        // done\n        return {\n          format: this.format,\n          native: {\n            asf: this.tags\n          }\n        };\n      }\n    });\n  }\n}\n"]}